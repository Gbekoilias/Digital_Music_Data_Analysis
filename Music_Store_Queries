--MUSIC STORE DATA ANALYSIS
--Question Set 1 - Easy

--Who is the senior most employee based on job title?
select last_name, first_name
from employee
order by title 
limit 1
;

--Which countries have the most Invoice?
select billing_country as country, count(*) as invoices
from invoice 
group by country
order by invoices desc
limit 3
;

--What are top 3 values of total invoice?
select total as total_invoice
from invoice
order by total desc
limit 3
;

-- Which city has the best customers? We would like to throw a promotional Music Festival in the city
--we made the most money. Write a query that returns one city that has the highest sum of invoice totals. 
--Return both the city name & sum of all invoice totals
select billing_city as city, sum(total) as invoice_totals 
from invoice
group by city
order by invoice_totals desc
limit 1
;

-- Who is the best customer? The customer who has spent the most money will be declared the best customer.
--Write a query that returns the person who has spent the most money
select u.customer_id as CustomerID,u.first_name, u.last_name, sum(i.total) as amount_spend
from customer u
join invoice i
on u.customer_id = i.customer_id
group by CustomerID
order by amount_spend desc
limit 1
;

--Question Set 2 â€“ Moderate

--Write query to return the email, first name, last name, & Genre of all Rock Music listeners.
--Return your list ordered alphabetically by email starting with A
select distinct c.email, c.first_name, c.last_name
from customer c
join invoice i
on c.customer_id = i.customer_id
join invoice_line l
on i.invoice_id = l.invoice_id
where l.track_id in ( select t.track_id 
				   from track t
				   join genre g
				   on t.genre_id = g.genre_id
				   where g.name like 'Rock'
)
order by c.email
;

--Let's invite the artists who have written the most rock music in our dataset.
--Write a query that returns the Artist name and total track count of the top 10 rock bands
select a.artist_id, a.name, count(a.artist_id) as track_count
from track t
join album m
on t.album_id = m.album_id
join artist a
on m.artist_id = a.artist_id
join genre g 
on t.genre_id = g.genre_id
where g.name like 'Rock'
group by a.artist_id
order by track_count desc
limit 10
;

--Return all the track names that have a song length longer than the average song length. 
--Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first
select track_id, name, milliseconds
from track 
where milliseconds > (select avg(milliseconds)
					from track)
order by milliseconds desc
;

-- Find how much amount spent by each customer on artists? Write a query to return customer name,
-- artist name and total spent
with best_selling_artist as (
                             select a.artist_id, a.name, sum(l.unit_price*l.quantity) AS total_sales
                             from invoice_line l
							 join track t
							 on l.track_id = t.track_id
							 join album m
							 on t.album_id = m.album_id
							 join artist a
							 on m.artist_id = a.artist_id
							 group by a.artist_id
							 order by total_sales desc
							 limit 1
)
select c.customer_id, c.first_name, c.last_name , a.name, sum(l.unit_price*l.quantity) AS amount_spent
from customer c
join invoice i
on c.customer_id = i.customer_id
join invoice_line l
on i.invoice_id = l.invoice_id
join track t
on l.track_id = t.track_id
join album m
on t.album_id = m.album_id
join artist a
on m.artist_id = a.artist_id
group by 1,2,3,4
order by 5 desc
;

-- We want to find out the most popular music Genre for each country. We determine the most popular genre
--as the genre with the highest amount of purchases. Write a query that returns each country 
--along with the top Genre. For countries where the maximum number of purchases is shared return all Genres

--obtain and stratify the class of observation
WITH popular_music_genre AS (
	SELECT
		COUNT(l.quantity) AS purchases,
		c.country,
		g.genre_id,
		g.name,
		ROW_NUMBER() OVER (PARTITION BY c.country ORDER BY COUNT(l.quantity) DESC) AS row_no
	FROM
		invoice_line l
		JOIN invoice i
	    ON l.invoice_id = i.invoice_id
		JOIN customer c 
	    ON i.customer_id = c.customer_id
		JOIN track t 
	    ON l.track_id = t.track_id
		JOIN genre g 
	    ON t.genre_id = g.genre_id
	GROUP BY 2, 3, 4
	ORDER BY 2 ASC, 1 DESC
)
SELECT *
FROM popular_music_genre
WHERE row_no <= 1
;

-- Write a query that determines the customer that has spent the most on music for each country.
-- Write a query that returns the country along with the top customer and how much they spent.
-- For countries where the top amount spent is shared, provide all customers who spent this amount.

with customer_with_country as
( 
	select c.customer_id, c.first_name, c.last_name, i.billing_country, sum(i.total) as amount_spent,
	row_number() over(partition by i.billing_country order by sum(total) desc)  as row_no
	from invoice i
	join customer c
	on i.customer_id = c.customer_id
	group by 1,2,3,4
	order by 4 asc,5 desc
)
select * 
from customer_with_country
where row_no <=1

--Project completed!!!

